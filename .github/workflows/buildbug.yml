name: buildbug
on: workflow_dispatch
jobs:
  buildbug:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 23
      - run: |
          cat <<EOF > package.json
          {
            "name": "lexical-cli-render",
            "type": "module",
            "private": true,
            "version": "0.24.0",
            "scripts": {},
            "dependencies": {
              "@lexical/headless": "^0.24.0",
              "@lexical/html": "^0.24.0",
              "@lexical/react": "0.24.0",
              "jsdom": "^26.0.0",
              "lexical": "0.24.0",
              "react": "^18.2.0",
              "react-dom": "^18.2.0",
              "ts-node": "^10.9.2"
            },
            "devDependencies": {
              "@types/react": "^18.2.59",
              "@types/react-dom": "^18.2.19",
              "typescript": "^5.2.2"
            }
          }
          EOF
      
      - run: |
          cat <<EOF > lexical-cli-render-tsx.ts
          import { EmojiNode } from "./src/nodes/EmojiNode";
          import { TextNode, $getRoot, $selectAll } from "lexical";
          import { createHeadlessEditor } from "@lexical/headless";
          import { $generateHtmlFromNodes } from "@lexical/html";
          import { JSDOM } from 'jsdom';
          import { HeadingNode, QuoteNode } from "@lexical/rich-text";
          import { LinkNode } from "@lexical/link";
          import { HashtagNode } from "@lexical/hashtag";
          import { ListNode, ListItemNode } from "@lexical/list";
          let input : string = "", html : string = "";
          const editor = createHeadlessEditor({
            editable: false,
            nodes: [TextNode, HeadingNode, QuoteNode, LinkNode, HashtagNode, ListNode, ListItemNode, EmojiNode],
            onError: (error) => { throw error;},
          });
          const dom = new JSDOM();
          global.window = dom.window;
          global.document = dom.window.document;
          process.stdin.on("data", (chunk) => {  input += chunk; });
          process.stdin.on("end", async () => 
          {
            try
            {
              const editorStateJson = JSON.parse(input).editorState;
              const editorState = editor.parseEditorState(editorStateJson);
              editor.setEditorState(editorState);    
              editor.update(() => { html = $generateHtmlFromNodes(editor, $selectAll()); });
              console.log(html);
            }
            catch (error)
            {
              console.error("Error processing EditorState JSON:", error);
              process.exit(1);
            }
          });
          EOF
      
      - run: npm install
      
      #- run: |
      #    cat samples/playground_without_emoji.lexical.json | node lexical-cli-render.ts
      #    
      #    sed -i 's@"type": "module",@@' package.json
      #    cat samples/playground.lexical.json | npx ts-node lexical-cli-render-tsx.ts
      #
      #- uses: actions/upload-artifact@v4
      #  with:
      #    name: lexicalplaygroundonlyassets
      #    path: dist/
